#!/usr/bin/env bash

dry_run="0"
replace_git_config="0"

if [ -z "$XDG_CONFIG_HOME" ]; then
    echo "no xdg config home"
    echo "using ~/.config"
    XDG_CONFIG_HOME=$HOME/.config
fi

if [ -z "$DEV_ENV" ]; then
    echo "env var DEV_ENV needs to be present"
    exit 1
fi

if [[ $1 == "--dry" ]]; then
    dry_run="1"
elif [[ $1 == "--all" ]]; then
    replace_git_config="1"

fi

log() {
    if [[ $dry_run == "1" ]]; then
        echo "[DRY_RUN]: $1"
    else
        echo "$1"
    fi
}

log "env: $DEV_ENV"

update_files() {
    log "copying over files from: $1"
    if [[ ! -f $2 ]]; then
        mkdir $2
    fi
    pushd $1 &> /dev/null
    (
        configs=`find . -mindepth 1 -maxdepth 1 -type d`
        for c in $configs; do
            directory=${2%/}/${c#./}
            log "    removing: rm -rf $directory"

            if [[ $dry_run == "0" ]]; then
                rm -rf $directory
            fi

            log "    copying env: cp $c $2"
            if [[ $dry_run == "0" ]]; then
                cp -r ./$c $2
            fi
        done
        files=`find . -mindepth 1 -maxdepth 1 -type f`
        for file in $files; do
            copy "$1/$file" "$2/$file"
        done

    )
    popd &> /dev/null
}

copy() {
    log "removing: $2"
    if [[ $dry_run == "0" ]]; then
        rm $2
    fi
    log "copying: $1 to $2"
    if [[ $dry_run == "0" ]]; then
        cp $1 $2
    fi
}

update_files $DEV_ENV/env/.config $XDG_CONFIG_HOME
update_files $DEV_ENV/env/.local $HOME/.local
update_files $DEV_ENV/env/.local/apps $HOME/.local/apps
update_files $DEV_ENV/env/.local/templates $HOME/.local/templates
update_files $DEV_ENV/env/.bashrc.d $HOME/.bashrc.d

copy $DEV_ENV/env/.bashrc $HOME/.bashrc
copy $DEV_ENV/env/.bash_profile $HOME/.bash_profile
copy $DEV_ENV/env/.bash_logout $HOME/.bash_logout
copy $DEV_ENV/env/.zshrc $HOME/.zshrc
copy $DEV_ENV/dev-env $HOME/.local/scripts/dev-env
copy $DEV_ENV/env/.xprofile $HOME/.xprofile

copy $DEV_ENV/env/.config/yabai/yabai.config $HOME/.yabairc
copy $DEV_ENV/env/.config/yabai/skhdrc.config $HOME/.skhdrc

copy $DEV_ENV/env/.ssh_config $HOME/.ssh/config
copy $HOME/personal/venv-lookup/venv-lookup $HOME/.local/bin/venv-lookup

if [[ $replace_git_config == "1" ]]; then
    copy $DEV_ENV/env/.personal_gitconfig $HOME/personal/.gitconfig
fi

source $HOME/.bash_profile
